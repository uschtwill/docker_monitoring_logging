version: '2.1'


services:

#########################################################
####                   MONITORING                    ####
#########################################################

  # Runs on your node(s) and forwards node(host) metrics to Prometheus.
  master-nodeexporter:
    image: prom/node-exporter:v0.15.2
    expose:
      - 9100
    volumes:
      - /proc:/host/proc:ro
      - /proc/1/net/dev:/host/proc/net/dev:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    restart: always
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################

  # Runs on your node(s) and forwards container metrics to Prometheus.
  master-cadvisor:
    image: google/cadvisor:v0.25.0
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################

  # Storage and search backend. Gets all metrics from cAdvisor and Nodeexporter and is the backend that Grafana runs on.
  prometheus:
    image: prom/prometheus:v2.3.2
    expose:
      - 9090
    volumes:
      - ../storage/prometheus:/prometheus
      #Will/23.08.16: dcom restart prometheus suffices to load config/rule changes
      #Qyao/07.10.17: curl -X POST http://localhost:9090/-/reload to reload config
      # it will be safe to mount ./prometheus folder in recent prometheus image  
      - ./prometheus:/etc/prometheus
    restart: always
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--query.lookback-delta=25s"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.listen-address=:9090"
      - "--storage.tsdb.retention=744h"
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################

  # Pretty frontend to explore and check out all your metrics.
  grafana:
    image: grafana/grafana:4.4.1
    expose:
      - 3000
    volumes:
      - ../storage/grafana:/var/lib/grafana
    restart: always
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group
    environment:
      - GF_SECURITY_ADMIN_USER=admin

#########################################################

  # Alerting plugin wrapping Prometheus and taking care of your metric alerting needs.
  alertmanager:
    image: prom/alertmanager:v0.8.0
    expose:
      - 9093
    restart: always
    volumes:
      - ./alertmanager/:/etc/alertmanager/
      - ../storage/alertmanager/:/alertmanager
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################
  blackboxprober:
    image: prom/blackbox-exporter:v0.10.0
    volumes:
      - ./blackboxprober:/etc/blackbox_exporter
    ports:
      - 9115:9115
    restart: always
    labels:
      container_group: monitoring
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################
####                   Networking                    ####
#########################################################

# Extra-network is necessary to have a dedicated IP for Logstash to forwards log to.
networks:
  default:
    external:
      name: monitoring_logging

#########################################################

  #### Other tools to look into:
  # topbeat (Metrics for ELK):
  # collectd (Alternative for metric collection on nodes):


  #### Alternative for Prometheus as a datastore:
  # influxdb:
  #   container_name: influxdb
  #   image: influxdb
  #   expose:
  #     - 8083
  #     - 8086
  #   hostname: influxdb
  #   # volumes:
  #   #   - influxdb:/var/lib/influxdb
  #   restart: always
  #   labels:
  #     container_group: monitoring
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: udp://localhost:12201
  #       labels: monitoring


  #### Example for another endpoint for Prometheus:
  # couchdbstats:
  # container_name: couchdbstats
  # image: gesellix/couchdb-exporter
  # expose:
  #   - 9984
  # hostname: couchdbstats
  # restart: always
  # labels:
  #   container_group: monitoring
  # logging:
  #   driver: gelf
  #   options:
  #     gelf-address: udp://logstash:12201
  #     labels: container_group
  # command: -couchdb.uri=http://couchdb:5984


  #### Get a free datadog account to have a look at their dashboards for inspiration:
  #   datadog:
  #   container_name: datadog
  #   image: datadog/docker-dd-agent
  #   hostname: datadog
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /proc/:/host/proc/:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   restart: always
  #   labels:
  #     container_group: monitoring
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: udp://localhost:12201
  #       labels: container_group
  #   environment:
  #     - API_KEY=
